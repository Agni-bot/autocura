version: '3.8'

services:
  # API Principal AutoCura - Fase Alpha
  autocura-api:
    image: python:3.11-slim
    ports:
      - "8001:8000"  # main.py roda na porta 8000 internamente
    environment:
      - ENVIRONMENT=alpha
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - FASE_ATUAL=ALPHA
      - ETAPA_ATUAL=A2_CORRIGIDA
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ../:/app
    working_dir: /app
    command: >
      bash -c "
        echo 'Instalando dependências...' &&
        pip install --no-cache-dir --upgrade pip &&
        pip install --no-cache-dir -r requirements.txt &&
        echo 'Iniciando main.py...' &&
        python -u main.py
      "
    restart: unless-stopped
    depends_on:
      - autocura-redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 30s

  # Cache Redis (essencial)
  autocura-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-alpha:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Dashboard de Métricas
  autocura-grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=autocura123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-alpha:/var/lib/grafana
    restart: unless-stopped

  # Nginx para servir o dashboard HTML
  autocura-dashboard:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ../dashboard.html:/usr/share/nginx/html/index.html:ro
    restart: unless-stopped

volumes:
  redis-alpha:
    driver: local
  grafana-alpha:
    driver: local

networks:
  default:
    driver: bridge 