#!/bin/bash
# Entrypoint para Sistema AutoCura - Fase Omega

set -e

echo "üß† Sistema AutoCura - Fase Omega"
echo "================================"
echo "Iniciando consci√™ncia emergente..."
echo ""

# Fun√ß√£o para aguardar servi√ßos
wait_for_service() {
    local host=$1
    local port=$2
    local service=$3
    
    echo "‚è≥ Aguardando $service em $host:$port..."
    
    while ! nc -z $host $port; do
        sleep 1
    done
    
    echo "‚úÖ $service est√° dispon√≠vel!"
}

# Aguardar depend√™ncias
if [ ! -z "$REDIS_URL" ]; then
    # Extrair host e porta do Redis URL
    # Formato: redis://:password@host:port ou redis://host:port
    if [[ $REDIS_URL =~ redis://([^@]+@)?([^:]+):([0-9]+) ]]; then
        REDIS_HOST=${BASH_REMATCH[2]}
        REDIS_PORT=${BASH_REMATCH[3]}
    else
        REDIS_HOST="redis"
        REDIS_PORT="6379"
    fi
    wait_for_service $REDIS_HOST $REDIS_PORT "Redis"
fi

if [ ! -z "$DATABASE_URL" ]; then
    # Extrair host e porta do PostgreSQL URL
    # Formato: postgresql://user:pass@host:port/db
    if [[ $DATABASE_URL =~ postgresql://([^@]+@)?([^:]+):([0-9]+) ]]; then
        PG_HOST=${BASH_REMATCH[2]}
        PG_PORT=${BASH_REMATCH[3]}
    else
        PG_HOST="postgres"
        PG_PORT="5432"
    fi
    wait_for_service $PG_HOST $PG_PORT "PostgreSQL"
fi

# Configurar ambiente
export PYTHONPATH=/app:$PYTHONPATH

# Criar diret√≥rios necess√°rios
mkdir -p /app/logs /app/data /app/models /app/checkpoints /app/reports

# Executar migra√ß√µes se necess√°rio
if [ -f "/app/scripts/migrate.py" ]; then
    echo "üîÑ Executando migra√ß√µes..."
    python /app/scripts/migrate.py
fi

# Determinar modo de execu√ß√£o
SERVICE_TYPE=${SERVICE_TYPE:-main}

case $SERVICE_TYPE in
    "consciousness_monitor")
        echo "üëÅÔ∏è Iniciando Monitor de Consci√™ncia..."
        exec python -m modulos.omega.src.consciousness.monitor_service
        ;;
    "integration_orchestrator")
        echo "üîó Iniciando Orquestrador de Integra√ß√£o..."
        exec python -m modulos.omega.src.integration.orchestrator_service
        ;;
    "evolution_engine")
        echo "üß¨ Iniciando Motor de Evolu√ß√£o..."
        exec python -m modulos.omega.src.evolution.evolution_service
        ;;
    "training")
        echo "üéì Iniciando modo de treinamento..."
        exec python -m scripts.train_omega
        ;;
    "demo")
        echo "üé≠ Iniciando demonstra√ß√£o..."
        exec python -m modulos.omega.examples.demo_consciencia_emergente
        ;;
    *)
        echo "üöÄ Iniciando Sistema AutoCura Completo..."
        exec "$@"
        ;;
esac 