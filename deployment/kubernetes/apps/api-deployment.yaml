# Deployment da API Principal do AutoCura
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autocura-api
  namespace: autocura-staging
  labels:
    app: autocura-api
    component: api
    version: v1
spec:
  replicas: 2  # Alta disponibilidade
  selector:
    matchLabels:
      app: autocura-api
      component: api
  template:
    metadata:
      labels:
        app: autocura-api
        component: api
        version: v1
    spec:
      initContainers:
      # Aguardar PostgreSQL estar pronto
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done']
      # Aguardar Redis estar pronto
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done']
      containers:
      - name: api
        image: autocura/api:latest  # Ajustar com registro real
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        # Configurações gerais
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: ENVIRONMENT
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: DEBUG
        # Configurações de API
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: API_PORT
        # PostgreSQL
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: autocura-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: autocura-secrets
              key: POSTGRES_PASSWORD
        # Redis
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: autocura-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: autocura-secrets
              key: REDIS_PASSWORD
        # OpenAI
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: autocura-secrets
              key: OPENAI_API_KEY
        volumeMounts:
        - name: autocura-data
          mountPath: /app/data
        - name: memoria-compartilhada
          mountPath: /app/memoria_compartilhada.json
          subPath: memoria_compartilhada.json
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
      volumes:
      - name: autocura-data
        persistentVolumeClaim:
          claimName: autocura-data-pvc
      - name: memoria-compartilhada
        configMap:
          name: memoria-inicial
          optional: true
---
# Service da API
apiVersion: v1
kind: Service
metadata:
  name: autocura-api-service
  namespace: autocura-staging
  labels:
    app: autocura-api
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: autocura-api
    component: api
---
# HorizontalPodAutoscaler para API
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autocura-api-hpa
  namespace: autocura-staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autocura-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 