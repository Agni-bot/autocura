apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: autocura
  labels:
    app.kubernetes.io/name: observabilidade
    app.kubernetes.io/part-of: autocura
  annotations:
    description: Configurações de observabilidade do Sistema de Autocura Cognitiva
data:
  fluent.conf: |
    <system>
      log_level info
      workers 1
      root_dir /var/log/fluentd
      suppress_repeated_stacktrace true
      emit_error_log_interval 60
      suppress_config_dump true
    </system>

    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_type string
          time_format %Y-%m-%dT%H:%M:%S.%NZ
          keep_time_key true
        </pattern>
        <pattern>
          format /^(?<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+Z)\s+(?<stream>stdout|stderr)\s+(?<log>.*)$/
          time_key time
          time_type string
          time_format %Y-%m-%dT%H:%M:%S.%NZ
          keep_time_key true
        </pattern>
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
      ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      verify_ssl true
    </filter>

    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        log_timestamp ${Time.parse(record["time"]).strftime('%Y-%m-%dT%H:%M:%S.%3NZ')}
        container_name ${record.dig("kubernetes", "container_name")}
        namespace_name ${record.dig("kubernetes", "namespace_name")}
        pod_name ${record.dig("kubernetes", "pod_name")}
        container_image ${record.dig("kubernetes", "container_image")}
        host ${record.dig("kubernetes", "host")}
        message ${record["log"]}
      </record>
      remove_keys time,stream,docker,kubernetes
    </filter>

    <match kubernetes.**>
      @type elasticsearch
      host elasticsearch
      port 9200
      logstash_format true
      logstash_prefix fluentd
      logstash_dateformat %Y%m%d
      include_tag_key true
      type_name fluentd
      tag_key @log_name
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever false
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match> 