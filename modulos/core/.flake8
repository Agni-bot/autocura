[flake8]
max-line-length = 88
extend-ignore = E203
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .tox,
    .venv,
    venv,
    .env,
    .mypy_cache,
    .pytest_cache,
    coverage_html,
    coverage.xml

per-file-ignores =
    __init__.py: F401
    tests/*: S101, S404, S603, S607

# E: pycodestyle errors
# W: pycodestyle warnings
# F: pyflakes errors
# C: McCabe complexity
# N: naming conventions
# S: bandit security issues
# B: flake8-bugbear
# T: flake8-builtins
# D: pydocstyle
# I: isort
# Q: flake8-quotes
# COM: flake8-commas
# TID: flake8-tidy-imports
# TCH: flake8-type-checking
# ARG: flake8-unused-arguments
# PIE: flake8-pie
# SIM: flake8-simplify
# PT: flake8-pytest-style
# RUF: ruff
# ERA: eradicate
# PD: pandas-vet
# PG: flake8-pg8000
# LOG: flake8-logging-format
# DJ: flake8-django
# MCP: mccabe
# PTH: flake8-use-pathlib
# YTT: flake8-2020
# ANN: flake8-annotations
# S101: assert statements
# S404: subprocess calls
# S603: subprocess calls with shell=True
# S607: subprocess calls with shell=True and no shell escape

# Configurações de importação
import-order-style = google
application-import-names = modulos

# Configurações de complexidade
max-complexity = 10

# Configurações de docstring
docstring-convention = google

# Configurações de naming
naming-style = snake_case
naming-function-regex = ^[a-z_][a-z0-9_]*$
naming-variable-regex = ^[a-z_][a-z0-9_]*$
naming-constant-regex = ^[A-Z_][A-Z0-9_]*$
naming-class-regex = ^[A-Z_][a-zA-Z0-9_]*$
naming-module-regex = ^[a-z_][a-z0-9_]*$
naming-method-regex = ^[a-z_][a-z0-9_]*$
naming-attr-regex = ^[a-z_][a-z0-9_]*$

# Configurações de imports
import-order-style = google
application-import-names = modulos
known-first-party = modulos
known-third-party = pytest,fastapi,uvicorn,pydantic 