apiVersion: apps/v1
kind: Deployment
metadata:
  name: diagnostico
  labels:
    app: diagnostico
spec:
  replicas: 3
  selector:
    matchLabels:
      app: diagnostico
  template:
    metadata:
      labels:
        app: diagnostico
    spec:
      containers:
      - name: diagnostico
        image: diagnostico:latest
        ports:
        - containerPort: 5001
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: LOG_FILE
          value: "/app/logs/diagnostico.log"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: diagnostico
spec:
  selector:
    app: diagnostico
  ports:
  - port: 5001
    targetPort: 5001
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: diagnostico
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: diagnostico
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 