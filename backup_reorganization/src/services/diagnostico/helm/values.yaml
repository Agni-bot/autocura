replicaCount: 3

image:
  repository: diagnostico
  tag: latest
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 5001

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  FLASK_APP: app.py
  FLASK_ENV: production
  LOG_LEVEL: INFO
  LOG_FILE: /app/logs/diagnostico.log

volumes:
  - name: logs
    emptyDir: {}

volumeMounts:
  - name: logs
    mountPath: /app/logs

probes:
  liveness:
    path: /health
    port: 5001
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    path: /health
    port: 5001
    initialDelaySeconds: 5
    periodSeconds: 5

prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 15s
    scrapeTimeout: 10s

grafana:
  enabled: true
  adminPassword: admin
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards
  dashboards:
    default:
      diagnostico:
        gnetId: 1
        revision: 1
        datasource: Prometheus 